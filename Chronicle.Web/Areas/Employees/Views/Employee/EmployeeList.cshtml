@model Chronicle.Web.PagedViewModel<Employee>
@using Chronicle.Entities
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Employee Management";
    
    // Calculate statistics
    var totalEmployees = Model?.TotalCount ?? 0;
    var employeesOnPage = Model?.Items?.Count() ?? 0;
    var activeEmployees = Model?.Items?.Where(e => e.IsActive == true).Count() ?? 0;
    var inactiveEmployees = Model?.Items?.Where(e => e.IsActive == false).Count() ?? 0;
    var totalCompanies = Model?.Items?.Select(e => e.CompanyID).Distinct().Count() ?? 0;
}

<style>
    /* Custom Enhancements for AdminLTE */
    .employee-stats {
        margin-bottom: 20px;
    }

    .info-box {
        display: block;
        min-height: 90px;
        background: #fff;
        width: 100%;
        box-shadow: 0 1px 1px rgba(0,0,0,0.1);
        border-radius: 2px;
        margin-bottom: 15px;
        transition: all 0.3s ease;
    }

        .info-box:hover {
            box-shadow: 0 3px 8px rgba(0,0,0,0.15);
            transform: translateY(-2px);
        }

    .info-box-icon {
        border-top-left-radius: 2px;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        border-bottom-left-radius: 2px;
        display: block;
        float: left;
        height: 90px;
        width: 90px;
        text-align: center;
        font-size: 45px;
        line-height: 90px;
        background: rgba(0,0,0,0.2);
    }

    .info-box-content {
        padding: 5px 10px;
        margin-left: 90px;
    }

    .info-box-number {
        display: block;
        font-weight: bold;
        font-size: 18px;
    }

    .info-box-text {
        display: block;
        font-size: 14px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .bg-aqua { background-color: #00c0ef !important; }
    .bg-green { background-color: #00a65a !important; }
    .bg-yellow { background-color: #f39c12 !important; }
    .bg-red { background-color: #dd4b39 !important; }

    .employee-filters {
        background: #fff;
        padding: 15px;
        margin-bottom: 20px;
        border-radius: 3px;
        box-shadow: 0 1px 1px rgba(0,0,0,0.1);
    }

    .employee-table .table > thead > tr > th {
        border-bottom: 2px solid #f4f4f4;
        font-weight: 600;
        background-color: #f9f9f9;
        font-size: 12px;
        text-transform: uppercase;
    }

    .employee-table .table > tbody > tr:hover {
        background-color: #f5f5f5;
    }

    .employee-table .table > tbody > tr > td {
        vertical-align: middle;
        padding: 8px;
        font-size: 13px;
    }

    .btn-action {
        padding: 4px 8px;
        margin: 0 2px;
        font-size: 12px;
        border-radius: 3px;
    }

    .employee-name {
        font-weight: 600;
        color: #3c8dbc;
    }

    .employee-info {
        display: flex;
        align-items: center;
        margin-bottom: 2px;
    }

    .employee-info i {
        margin-right: 5px;
        width: 12px;
        color: #666;
    }

    .company-badge {
        background: linear-gradient(45deg, #3c8dbc, #357ca5);
        color: white;
        padding: 2px 8px;
        border-radius: 10px;
        font-size: 11px;
        font-weight: bold;
    }

    .department-badge {
        background: linear-gradient(45deg, #00a65a, #008d4c);
        color: white;
        padding: 2px 8px;
        border-radius: 10px;
        font-size: 11px;
        font-weight: bold;
    }

    .contact-info {
        font-size: 12px;
        color: #666;
    }

    .employee-id-badge {
        background: #f4f4f4;
        color: #666;
        padding: 2px 6px;
        border-radius: 3px;
        font-size: 11px;
        font-weight: bold;
    }

    .status-badge {
        padding: 4px 8px;
        border-radius: 12px;
        font-size: 11px;
        font-weight: bold;
    }

    .status-active {
        background-color: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }

    .status-inactive {
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }

    .empty-state {
        text-align: center;
        padding: 60px 20px;
        color: #666;
    }

        .empty-state i {
            font-size: 64px;
            color: #ddd;
            margin-bottom: 15px;
        }

    .search-section {
        background: #fff;
        padding: 15px;
        margin-bottom: 20px;
        border-radius: 3px;
        box-shadow: 0 1px 1px rgba(0,0,0,0.1);
    }

    .pagination-wrapper {
        padding: 15px;
        border-top: 1px solid #f4f4f4;
        background: #fafafa;
    }

    .table-header-actions {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
    }

    .view-toggle {
        display: flex;
        border: 1px solid #ddd;
        border-radius: 3px;
        overflow: hidden;
    }

    .view-toggle button {
        background: #fff;
        border: none;
        padding: 6px 12px;
        font-size: 12px;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .view-toggle button.active {
            background: #3c8dbc;
            color: white;
        }

        .view-toggle button:hover:not(.active) {
            background: #f5f5f5;
        }

    /* Grid View Styles */
    .employee-grid {
        display: none;
    }

    .employee-card {
        background: #fff;
        border-radius: 6px;
        box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        padding: 20px;
        margin-bottom: 20px;
        transition: all 0.3s ease;
        border-left: 4px solid #3c8dbc;
    }

        .employee-card:hover {
            box-shadow: 0 4px 8px rgba(0,0,0,0.15);
            transform: translateY(-2px);
        }

    .employee-card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
    }

    .employee-card-title {
        font-size: 18px;
        font-weight: 600;
        color: #3c8dbc;
        margin: 0;
    }

    .employee-card-id {
        background: #f8f9fa;
        color: #666;
        padding: 4px 8px;
        border-radius: 12px;
        font-size: 11px;
        font-weight: bold;
    }

    .employee-card-body {
        margin-bottom: 15px;
    }

    .employee-detail {
        display: flex;
        align-items: center;
        margin-bottom: 8px;
        font-size: 13px;
    }

        .employee-detail i {
            width: 16px;
            margin-right: 8px;
            color: #666;
        }

    .employee-card-actions {
        display: flex;
        gap: 5px;
        justify-content: flex-end;
    }

    .filter-tabs {
        border-bottom: 1px solid #f4f4f4;
        margin-bottom: 15px;
    }

    .filter-tab {
        background: none;
        border: none;
        padding: 10px 15px;
        color: #666;
        font-weight: 500;
        border-bottom: 2px solid transparent;
        cursor: pointer;
    }

        .filter-tab.active {
            color: #3c8dbc;
            border-bottom-color: #3c8dbc;
        }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .info-box-icon {
            width: 70px;
            height: 70px;
            font-size: 35px;
            line-height: 70px;
        }

        .info-box-content {
            margin-left: 70px;
        }

        .table-responsive {
            font-size: 11px;
        }

        .btn-action {
            padding: 2px 4px;
            font-size: 10px;
        }

        /* Hide less important columns on mobile */
        .employee-table th:nth-child(4),
        .employee-table td:nth-child(4), /* Department */
        .employee-table th:nth-child(6),
        .employee-table td:nth-child(6) /* Phone */
        {
            display: none;
        }
    }

    @@media (max-width: 480px) {
        /* Hide more columns on very small screens */
        .employee-table th:nth-child(3),
        .employee-table td:nth-child(3) /* Company */
        {
            display: none;
        }
    }
</style>

<!-- Content Header -->
<section class="content-header">
    <div class="row">
        <div class="col-md-12" style="margin-bottom: 0px;">
            <h1 class="pull-left pagetitle" style="font-size: 22px; margin-top: 5px;">
                <ul style="padding-left: 0;">
                    <li class="breadcrumb-item" style="display: inline; list-style: none;">
                        <a href="/Home/Index">
                            <i class="fa fa-home" aria-hidden="true"></i><span class="sr-only">Home</span>
                        </a>
                        <i class="fa fa-angle-right" aria-hidden="true"></i>
                    </li>
                    <li class="breadcrumb-item active" style="display: inline; list-style: none;">
                        Employee Management
                    </li>
                </ul>
            </h1>

            <div class="pull-right">
                <a href="/Employee/Create" class="btn btn-primary">
                    <i class="fa fa-plus"></i> Create New Employee
                </a>
            </div>
        </div>
    </div>
</section>

<!-- Main content -->
<section class="content">
    <!-- Statistics Cards -->
    <div class="row employee-stats">
        <div class="col-md-3 col-sm-6 col-xs-12">
            <div class="info-box">
                <span class="info-box-icon bg-aqua"><i class="fa fa-users"></i></span>
                <div class="info-box-content">
                    <span class="info-box-text">Total Employees</span>
                    <span class="info-box-number">@totalEmployees</span>
                </div>
            </div>
        </div>

        <div class="col-md-3 col-sm-6 col-xs-12">
            <div class="info-box">
                <span class="info-box-icon bg-green"><i class="fa fa-check-circle"></i></span>
                <div class="info-box-content">
                    <span class="info-box-text">Active Employees</span>
                    <span class="info-box-number">@activeEmployees</span>
                </div>
            </div>
        </div>

        <div class="col-md-3 col-sm-6 col-xs-12">
            <div class="info-box">
                <span class="info-box-icon bg-yellow"><i class="fa fa-pause-circle"></i></span>
                <div class="info-box-content">
                    <span class="info-box-text">Inactive Employees</span>
                    <span class="info-box-number">@inactiveEmployees</span>
                </div>
            </div>
        </div>

        <div class="col-md-3 col-sm-6 col-xs-12">
            <div class="info-box">
                <span class="info-box-icon bg-red"><i class="fa fa-building"></i></span>
                <div class="info-box-content">
                    <span class="info-box-text">Companies</span>
                    <span class="info-box-number">@totalCompanies</span>
                </div>
            </div>
        </div>
    </div>

    <!-- Search Section -->
    <div class="row">
        <div class="col-xs-12">
            <div class="search-section">
                <form method="get" action="/Employee" id="searchForm">
                    <input type="hidden" name="pageSize" id="hiddenPageSize" value="@Model.PageSize" />
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="input-group">
                                    <input type="text" name="searchTerm" value="@ViewBag.CurrentFilter" 
                                           class="form-control" placeholder="Search employees by name, email, position...">
                                    <span class="input-group-btn">
                                        <button type="submit" class="btn btn-primary">
                                            <i class="fa fa-search"></i> Search
                                        </button>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <select class="form-control" id="statusFilter">
                                    <option value="">All Status</option>
                                    <option value="active">Active</option>
                                    <option value="inactive">Inactive</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <select class="form-control" id="companyFilter">
                                    <option value="">All Companies</option>
                                    @if (Model.Items != null)
                                    {
                                        @foreach (var companyId in Model.Items.Select(e => e.CompanyID).Distinct().OrderBy(c => c))
                                        {
                                            var companyName = Cache.Companies.ContainsKey(companyId) ? Cache.Companies[companyId].Name : $"Company {companyId}";
                                            <option value="@companyId">@companyName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <select class="form-control" id="pageSizeSelect" onchange="changePageSize(this.value)">
                                    @{
                                        var pageSizeOptions = new[] { 5, 10, 25, 50, 100 };
                                    }
                                    @foreach (var pageSize in pageSizeOptions)
                                    {
                                        if (Model.PageSize  == pageSize)
                                        {
                                              <option value="@pageSize" selected>@pageSize per page</option>
                                        } else
                                        {
                                              <option value="@pageSize">@pageSize per page</option>
                                        }
                                      
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Employee List -->
    <div class="row">
        <div class="col-xs-12">
            <div class="box box-primary employee-table">
                <div class="box-header with-border">
                    <div class="table-header-actions">
                        <h3 class="box-title">
                            <i class="fa fa-users"></i> Employees (@totalEmployees total)
                        </h3>
                        <div class="view-toggle">
                            <button type="button" class="active" id="tableViewBtn">
                                <i class="fa fa-table"></i> Table
                            </button>
                            <button type="button" id="gridViewBtn">
                                <i class="fa fa-th"></i> Grid
                            </button>
                        </div>
                    </div>
                    <div class="box-tools pull-right">
                        <button class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>

                <!-- Filter Tabs -->
                <div class="filter-tabs">
                    <button class="filter-tab active" data-filter="all">All (@totalEmployees)</button>
                    <button class="filter-tab" data-filter="active">Active (@activeEmployees)</button>
                    <button class="filter-tab" data-filter="inactive">Inactive (@inactiveEmployees)</button>
                </div>

                <div class="box-body">
                    @if (Model.Items != null && Model.Items.Any())
                    {
                        <!-- Table View -->
                        <div id="tableView" class="table-responsive">
                            <table class="table table-bordered table-striped" id="employeesTable">
                                <thead>
                                    <tr>
                                        <th width="60">ID</th>
                                        <th>Employee Name</th>
                                        <th>Company</th>
                                        <th>Department</th>
                                        <th>Position</th>
                                        <th>Email</th>
                                        <th width="120">Phone</th>
                                        <th width="80">Status</th>
                                        <th width="100">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var employee in Model.Items)
                                    {
                                        var companyName = Cache.Companies.ContainsKey(employee.CompanyID) ? Cache.Companies[employee.CompanyID].Name : "N/A";
                                        <tr data-status="@(employee.IsActive == true ? "active" : "inactive")" data-company="@employee.CompanyID">
                                            <td>
                                                <span class="employee-id-badge">#@employee.EmployeeID</span>
                                            </td>
                                            <td>
                                                <div class="employee-name">@employee.FirstName @employee.LastName</div>
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(companyName) && companyName != "N/A")
                                                {
                                                    <span class="company-badge">@companyName</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                @if (employee.DepartmentID.HasValue)
                                                {
                                                    <span class="department-badge">Dept @employee.DepartmentID</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(employee.Position))
                                                {
                                                    <div class="contact-info">
                                                        <i class="fa fa-briefcase"></i> @employee.Position
                                                    </div>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(employee.Email))
                                                {
                                                    <div class="contact-info">
                                                        <i class="fa fa-envelope"></i>
                                                        <a href="mailto:@employee.Email" title="Send Email">@employee.Email</a>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(employee.Phone))
                                                {
                                                    <div class="contact-info">
                                                        <i class="fa fa-phone"></i>
                                                        <a href="tel:@employee.Phone" title="Call">@employee.Phone</a>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                @if (employee.IsActive == true)
                                                {
                                                    <span class="status-badge status-active">Active</span>
                                                }
                                                else
                                                {
                                                    <span class="status-badge status-inactive">Inactive</span>
                                                }
                                            </td>
                                            <td>
                                                <a href="/Employee/Edit/@employee.EmployeeID" 
                                                   class="btn btn-warning btn-xs btn-action" title="Edit Employee">
                                                    <i class="fa fa-edit"></i>
                                                </a>
                                                <button onclick="deleteEmployee(@employee.EmployeeID, '@Html.Raw(Html.Encode(employee.FirstName + " " + employee.LastName))')" 
                                                        class="btn btn-danger btn-xs btn-action" title="Delete Employee">
                                                    <i class="fa fa-trash"></i>
                                                </button>
                                                <button onclick="toggleEmployeeStatus(@employee.EmployeeID, @(employee.IsActive == true ? "false" : "true"))" 
                                                        class="btn @(employee.IsActive == true ? "btn-warning" : "btn-success") btn-xs btn-action" 
                                                        title="@(employee.IsActive == true ? "Deactivate" : "Activate")">
                                                    <i class="fa @(employee.IsActive == true ? "fa-pause" : "fa-play")"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Grid View -->
                        <div id="gridView" class="employee-grid">
                            <div class="row">
                                @foreach (var employee in Model.Items)
                                {
                                    var companyName = Cache.Companies.ContainsKey(employee.CompanyID) ? Cache.Companies[employee.CompanyID].Name : "N/A";
                                    <div class="col-md-6 col-lg-4" data-status="@(employee.IsActive == true ? "active" : "inactive")" data-company="@employee.CompanyID">
                                        <div class="employee-card">
                                            <div class="employee-card-header">
                                                <h4 class="employee-card-title">@employee.FirstName @employee.LastName</h4>
                                                <span class="employee-card-id">#@employee.EmployeeID</span>
                                            </div>
                                            <div class="employee-card-body">
                                                @if (!string.IsNullOrEmpty(companyName) && companyName != "N/A")
                                                {
                                                    <div class="employee-detail">
                                                        <i class="fa fa-building"></i>
                                                        <span>@companyName</span>
                                                    </div>
                                                }
                                                @if (!string.IsNullOrEmpty(employee.Position))
                                                {
                                                    <div class="employee-detail">
                                                        <i class="fa fa-briefcase"></i>
                                                        <span>@employee.Position</span>
                                                    </div>
                                                }
                                                @if (!string.IsNullOrEmpty(employee.Email))
                                                {
                                                    <div class="employee-detail">
                                                        <i class="fa fa-envelope"></i>
                                                        <a href="mailto:@employee.Email">@employee.Email</a>
                                                    </div>
                                                }
                                                @if (!string.IsNullOrEmpty(employee.Phone))
                                                {
                                                    <div class="employee-detail">
                                                        <i class="fa fa-phone"></i>
                                                        <a href="tel:@employee.Phone">@employee.Phone</a>
                                                    </div>
                                                }
                                                <div class="employee-detail">
                                                    <i class="fa fa-info-circle"></i>
                                                    @if (employee.IsActive == true)
                                                    {
                                                        <span class="status-badge status-active">Active</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="status-badge status-inactive">Inactive</span>
                                                    }
                                                </div>
                                            </div>
                                            <div class="employee-card-actions">
                                                <a href="/Employee/Edit/@employee.EmployeeID" 
                                                   class="btn btn-warning btn-sm" title="Edit Employee">
                                                    <i class="fa fa-edit"></i> Edit
                                                </a>
                                                <button onclick="toggleEmployeeStatus(@employee.EmployeeID, @(employee.IsActive == true ? "false" : "true"))" 
                                                        class="btn @(employee.IsActive == true ? "btn-warning" : "btn-success") btn-sm" 
                                                        title="@(employee.IsActive == true ? "Deactivate" : "Activate")">
                                                    <i class="fa @(employee.IsActive == true ? "fa-pause" : "fa-play")"></i> @(employee.IsActive == true ? "Deactivate" : "Activate")
                                                </button>
                                                <button onclick="deleteEmployee(@employee.EmployeeID, '@Html.Raw(Html.Encode(employee.FirstName + " " + employee.LastName))')" 
                                                        class="btn btn-danger btn-sm" title="Delete Employee">
                                                    <i class="fa fa-trash"></i> Delete
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="empty-state">
                            <i class="fa fa-users"></i>
                            <h4>No employees found</h4>
                            @if (!string.IsNullOrEmpty(ViewBag.CurrentFilter as string))
                            {
                                <p>No employees match your search criteria "<strong>@ViewBag.CurrentFilter</strong>".</p>
                                <a href="/Employee" class="btn btn-default">Clear Search</a>
                            }
                            else
                            {
                                <p>Start by creating your first employee.</p>
                                <a href="/Employee/Create" class="btn btn-primary">
                                    <i class="fa fa-plus"></i> Create Employee
                                </a>
                            }
                        </div>
                    }
                </div>

                @if (Model.Items != null && Model.Items.Any() && Model.TotalPages > 1)
                {
                    <!-- Pagination -->
                    <div class="pagination-wrapper">
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="dataTables_info">
                                    Showing @((Model.CurrentPage - 1) * Model.PageSize + 1) to @Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalCount) of @Model.TotalCount employees
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <ul class="pagination pagination-sm pull-right">
                                    <li class="@(Model.CurrentPage == 1 ? "disabled" : "")">
                                        <a href="/Employee/?searchTerm=@ViewBag.CurrentFilter&page=1&pageSize=@Model.PageSize">&laquo;</a>
                                    </li>
                                    @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                                    {
                                        <li class="@(i == Model.CurrentPage ? "active" : "")">
                                            <a href="/Employee/?searchTerm=@ViewBag.CurrentFilter&page=@i&pageSize=@Model.PageSize">@i</a>
                                        </li>
                                    }
                                    <li class="@(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                                        <a href="/Employee/?searchTerm=@ViewBag.CurrentFilter&page=@Model.TotalPages&pageSize=@Model.PageSize">&raquo;</a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

@section Scripts {


    <script>
        $(document).ready(function () {
            // View toggle functionality
            $('#tableViewBtn').click(function () {
                $(this).addClass('active');
                $('#gridViewBtn').removeClass('active');
                $('#tableView').show();
                $('#gridView').hide();
                localStorage.setItem('employeeViewMode', 'table');
            });

            $('#gridViewBtn').click(function () {
                $(this).addClass('active');
                $('#tableViewBtn').removeClass('active');
                $('#tableView').hide();
                $('#gridView').show();
                localStorage.setItem('employeeViewMode', 'grid');
            });

            // Remember view preference
            var savedView = localStorage.getItem('employeeViewMode');
            if (savedView === 'grid') {
                $('#gridViewBtn').click();
            }

            // Filter tabs functionality
            $('.filter-tab').click(function () {
                $('.filter-tab').removeClass('active');
                $(this).addClass('active');

                var filter = $(this).data('filter');
                var tableRows = $('#employeesTable tbody tr');
                var gridCards = $('#gridView .col-md-6');

                if (filter === 'all') {
                    tableRows.show();
                    gridCards.show();
                } else {
                    tableRows.hide();
                    gridCards.hide();
                    tableRows.filter('[data-status="' + filter + '"]').show();
                    gridCards.filter('[data-status="' + filter + '"]').show();
                }
            });

            // Status filter functionality
            $('#statusFilter').change(function () {
                var selectedStatus = $(this).val().toLowerCase();
                var tableRows = $('#employeesTable tbody tr');
                var gridCards = $('#gridView .col-md-6');

                if (selectedStatus === '') {
                    tableRows.show();
                    gridCards.show();
                } else {
                    tableRows.each(function () {
                        var rowStatus = $(this).data('status');
                        if (rowStatus === selectedStatus) {
                            $(this).show();
                        } else {
                            $(this).hide();
                        }
                    });

                    gridCards.each(function () {
                        var cardStatus = $(this).data('status');
                        if (cardStatus === selectedStatus) {
                            $(this).show();
                        } else {
                            $(this).hide();
                        }
                    });
                }
            });

            // Company filter functionality
            $('#companyFilter').change(function () {
                var selectedCompany = $(this).val();
                var tableRows = $('#employeesTable tbody tr');
                var gridCards = $('#gridView .col-md-6');

                if (selectedCompany === '') {
                    tableRows.show();
                    gridCards.show();
                } else {
                    tableRows.each(function () {
                        var rowCompany = $(this).data('company').toString();
                        if (rowCompany === selectedCompany) {
                            $(this).show();
                        } else {
                            $(this).hide();
                        }
                    });

                    gridCards.each(function () {
                        var cardCompany = $(this).data('company').toString();
                        if (cardCompany === selectedCompany) {
                            $(this).show();
                        } else {
                            $(this).hide();
                        }
                    });
                }
            });

            // Tooltip initialization
            $('[title]').tooltip();

            // Search functionality enhancement
            $('input[name="searchTerm"]').on('keypress', function (e) {
                if (e.which === 13) { // Enter key
                    $(this).closest('form').submit();
                }
            });
        });

        // Change page size function
        function changePageSize(pageSize) {
            $('#hiddenPageSize').val(pageSize);
            $('#searchForm').submit();
        }

        // Toggle employee status with SweetAlert
        function toggleEmployeeStatus(employeeId, activate) {
            var action = activate === 'true' ? 'activate' : 'deactivate';
            var actionText = activate === 'true' ? 'Activate' : 'Deactivate';
            var iconType = activate === 'true' ? 'question' : 'warning';
            var confirmButtonColor = activate === 'true' ? '#00a65a' : '#f39c12';

            Swal.fire({
                title: actionText + ' Employee?',
                text: 'Are you sure you want to ' + action + ' this employee?',
                icon: iconType,
                showCancelButton: true,
                confirmButtonColor: confirmButtonColor,
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Yes, ' + action + '!',
                cancelButtonText: 'Cancel',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    // Show loading
                    Swal.fire({
                        title: actionText.slice(0, -1) + 'ing Employee...',
                        text: 'Please wait while we process your request.',
                        icon: 'info',
                        allowOutsideClick: false,
                        allowEscapeKey: false,
                        showConfirmButton: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    });

                    // Simulate API call - replace with actual endpoint
                    setTimeout(() => {
                        Swal.fire({
                            title: 'Success!',
                            text: 'Employee has been ' + action + 'd successfully.',
                            icon: 'success',
                            confirmButtonColor: '#00a65a',
                            timer: 2000,
                            timerProgressBar: true
                        }).then(() => {
                            location.reload();
                        });
                    }, 1000);
                }
            });
        }

        // Delete employee with SweetAlert
        function deleteEmployee(employeeId, employeeName) {
            Swal.fire({
                title: 'Delete Employee?',
                html: `Are you sure you want to delete <strong>"${employeeName}"</strong>?<br><br><small class="text-muted">This action cannot be undone!</small>`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#dd4b39',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Yes, delete!',
                cancelButtonText: 'Cancel',
                reverseButtons: true,
                focusCancel: true
            }).then((result) => {
                if (result.isConfirmed) {
                    // Show loading
                    Swal.fire({
                        title: 'Deleting Employee...',
                        text: 'Please wait while we process your request.',
                        icon: 'info',
                        allowOutsideClick: false,
                        allowEscapeKey: false,
                        showConfirmButton: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    });

                    // Simulate API call - replace with actual endpoint
                    setTimeout(() => {
                        Swal.fire({
                            title: 'Deleted!',
                            text: 'Employee has been deleted successfully.',
                            icon: 'success',
                            confirmButtonColor: '#00a65a',
                            timer: 2000,
                            timerProgressBar: true
                        }).then(() => {
                            location.reload();
                        });
                    }, 1000);
                }
            });
        }
    </script>

    
}