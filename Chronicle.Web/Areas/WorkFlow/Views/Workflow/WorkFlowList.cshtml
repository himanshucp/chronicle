@model PagedViewModel<Chronicle.Entities.Workflow>
@using Chronicle.Entities
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Workflow Management";

    // Calculate statistics to avoid lambda expressions in HTML
    var totalWorkflows = Model?.TotalCount ?? 0;
    var activeWorkflows = Model?.Items?.Where(w => w.IsActive).Count() ?? 0;
    var inactiveWorkflows = Model?.Items?.Where(w => !w.IsActive).Count() ?? 0;
    var totalModules = Model?.Items?.Select(w => w.Module).Distinct().Count() ?? 0;
}

<style>
    /* Custom Enhancements for AdminLTE */
    .workflow-stats {
        margin-bottom: 20px;
    }

    .info-box {
        display: block;
        min-height: 90px;
        background: #fff;
        width: 100%;
        box-shadow: 0 1px 1px rgba(0,0,0,0.1);
        border-radius: 2px;
        margin-bottom: 15px;
        transition: all 0.3s ease;
    }

        .info-box:hover {
            box-shadow: 0 3px 8px rgba(0,0,0,0.15);
            transform: translateY(-2px);
        }

    .info-box-icon {
        border-top-left-radius: 2px;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        border-bottom-left-radius: 2px;
        display: block;
        float: left;
        height: 90px;
        width: 90px;
        text-align: center;
        font-size: 45px;
        line-height: 90px;
        background: rgba(0,0,0,0.2);
    }

    .info-box-content {
        padding: 5px 10px;
        margin-left: 90px;
    }

    .info-box-number {
        display: block;
        font-weight: bold;
        font-size: 18px;
    }

    .info-box-text {
        display: block;
        font-size: 14px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .bg-aqua {
        background-color: #00c0ef !important;
    }

    .bg-green {
        background-color: #00a65a !important;
    }

    .bg-yellow {
        background-color: #f39c12 !important;
    }

    .bg-red {
        background-color: #dd4b39 !important;
    }

    .workflow-filters {
        background: #fff;
        padding: 15px;
        margin-bottom: 20px;
        border-radius: 3px;
        box-shadow: 0 1px 1px rgba(0,0,0,0.1);
    }

    .workflow-table .table > thead > tr > th {
        border-bottom: 2px solid #f4f4f4;
        font-weight: 600;
        background-color: #f9f9f9;
    }

    .workflow-table .table > tbody > tr:hover {
        background-color: #f5f5f5;
    }

    .label-status {
        font-size: 11px;
        padding: 4px 8px;
    }

    .btn-action {
        padding: 3px 6px;
        margin: 0 1px;
        font-size: 12px;
    }

    .module-badge {
        background: linear-gradient(45deg, #3c8dbc, #357ca5);
        color: white;
        padding: 2px 8px;
        border-radius: 10px;
        font-size: 11px;
        font-weight: bold;
    }

    .workflow-description {
        max-width: 150px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .filter-tabs {
        border-bottom: 1px solid #f4f4f4;
        margin-bottom: 15px;
    }

    .filter-tab {
        background: none;
        border: none;
        padding: 10px 15px;
        color: #666;
        font-weight: 500;
        border-bottom: 2px solid transparent;
        cursor: pointer;
    }

        .filter-tab.active {
            color: #3c8dbc;
            border-bottom-color: #3c8dbc;
        }

    .pagination-wrapper {
        padding: 15px;
        border-top: 1px solid #f4f4f4;
        background: #fafafa;
    }

    .empty-state {
        text-align: center;
        padding: 40px;
        color: #666;
    }

        .empty-state i {
            font-size: 64px;
            color: #ddd;
            margin-bottom: 15px;
        }


   
</style>

<section class="content-header">
    <div class="row">
        <div class="col-md-12" style="margin-bottom: 0px;">
            <style>
                .breadcrumb-item {
                    display: inline;
                    list-style: none;
                }
            </style>

            <h1 class="pull-left pagetitle" style="font-size: 22px; margin-top: 5px;">
                <ul style="padding-left: 0;">
                    <li class="breadcrumb-item">
                        <a href="/Home/Index">
                            <i class="fa-solid fa-house" aria-hidden="true"></i><span class="sr-only">Home</span>
                        </a>
                        <i class="fas fa-angle-right" aria-hidden="true"></i>
                    </li>
                    <li class="breadcrumb-item active">
                        Workflow
                    </li>
                </ul>
            </h1>

            <div class="pull-right">
                <a href="/Workflow/Create" class="btn btn-primary pull-right">
                    Create New Workflow
                </a>
            </div>
        </div>
    </div>
</section>

@* <section class="content-header">
    <h1>
        Workflow Management
        <small>Control panel</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index", "Home")"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">Workflow</li>
    </ol>
</section> *@

<!-- Main content -->
<section class="content">
    <!-- Info boxes -->
    <div class="row workflow-stats">
        <div class="col-md-3 col-sm-6 col-xs-12">
            <div class="info-box">
                <span class="info-box-icon bg-aqua"><i class="fa fa-sitemap"></i></span>
                <div class="info-box-content">
                    <span class="info-box-text">Total Workflows</span>
                    <span class="info-box-number">@totalWorkflows</span>
                </div>
            </div>
        </div>

        <div class="col-md-3 col-sm-6 col-xs-12">
            <div class="info-box">
                <span class="info-box-icon bg-green"><i class="fa fa-check-circle"></i></span>
                <div class="info-box-content">
                    <span class="info-box-text">Active Workflows</span>
                    <span class="info-box-number">@activeWorkflows</span>
                </div>
            </div>
        </div>

        <div class="col-md-3 col-sm-6 col-xs-12">
            <div class="info-box">
                <span class="info-box-icon bg-yellow"><i class="fa fa-clock-o"></i></span>
                <div class="info-box-content">
                    <span class="info-box-text">Inactive Workflows</span>
                    <span class="info-box-number">@inactiveWorkflows</span>
                </div>
            </div>
        </div>

        <div class="col-md-3 col-sm-6 col-xs-12">
            <div class="info-box">
                <span class="info-box-icon bg-red"><i class="fa fa-users"></i></span>
                <div class="info-box-content">
                    <span class="info-box-text">Modules</span>
                    <span class="info-box-number">@totalModules</span>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filter Section -->
    <div class="row">
        <div class="col-xs-12">
            <div class="workflow-filters">
                @using (Html.BeginForm("WorkFlowListAsync", "Workflow", FormMethod.Get))
                {
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="input-group">
                                    @Html.TextBox("searchTerm", ViewBag.SearchTerm as string, new { @class = "form-control", @placeholder = "Search workflows..." })
                                    <span class="input-group-addon">
                                        <i class="fa fa-search"></i>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.DropDownList("moduleFilter",
                                         new SelectList(new[] {
                            new { Value = "", Text = "All Modules" },
                            new { Value = "InspectionRequest", Text = "Inspection Request" },
                            new { Value = "PurchaseOrder", Text = "Purchase Order" },
                            new { Value = "Invoice", Text = "Invoice" },
                            new { Value = "Contract", Text = "Contract" }
                            }, "Value", "Text"),
                                         new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.DropDownList("statusFilter",
                                         new SelectList(new[] {
                            new { Value = "", Text = "All Status" },
                            new { Value = "active", Text = "Active" },
                            new { Value = "inactive", Text = "Inactive" }
                            }, "Value", "Text"),
                                         new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <a href="@Url.Action("Create", "Workflow")" class="btn btn-primary btn-block">
                                <i class="fa fa-plus"></i> Create New
                            </a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Workflow Table -->
    <div class="row">
        <div class="col-xs-12">
            <div class="box box-primary workflow-table">
                <div class="box-header with-border">
                    <h3 class="box-title">Workflows</h3>
                    <div class="box-tools pull-right">
                        <button class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>

                <!-- Filter Tabs -->
                <div class="filter-tabs">
                    <button class="filter-tab active" data-filter="all">All (@totalWorkflows)</button>
                    <button class="filter-tab" data-filter="active">Active (@activeWorkflows)</button>
                    <button class="filter-tab" data-filter="inactive">Inactive (@inactiveWorkflows)</button>
                </div>

                <div class="box-body">
                    @if (Model != null && Model.Items != null && Model.Items.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-bordered table-striped" id="workflowTable">
                                <thead>
                                    <tr>
                                        <th>Workflow Name</th>
                                        <th>Module</th>
                                        <th>Description</th>
                                        <th>Status</th>
                                        <th>Version</th>
                                        <th>Created By</th>
                                        <th>Created Date</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var workflow in Model.Items)
                                    {
                                        <tr data-status="@(workflow.IsActive ? "active" : "inactive")">
                                            <td>
                                                <strong>
                                                    <i class="fa fa-sitemap @(workflow.IsActive ? "text-primary" : "text-muted")"></i>
                                                    @workflow.WorkflowName
                                                </strong>
                                            </td>
                                            <td>
                                                <span class="module-badge">@workflow.Module</span>
                                            </td>
                                            <td class="workflow-description" title="@workflow.Description">
                                                @(string.IsNullOrEmpty(workflow.Description) ? "No description" : workflow.Description)
                                            </td>
                                            <td>
                                                @if (workflow.IsActive)
                                                {
                                                    <span class="label label-success label-status">Active</span>
                                                }
                                                else
                                                {
                                                    <span class="label label-default label-status">Inactive</span>
                                                }
                                            </td>
                                            <td>
                                                <span class="badge @(workflow.IsActive ? "bg-blue" : "bg-gray")">v@workflow.Version</span>
                                            </td>
                                            <td>@workflow.CreatedBy</td>
                                            <td>@workflow.CreatedDate.ToString("yyyy-MM-dd")</td>
                                            <td>
                                                <a href="@Url.Action("Details", "Workflow", new { id = workflow.WorkflowId })"
                                                   class="btn btn-info btn-xs btn-action" title="View">
                                                    <i class="fa fa-eye"></i>
                                                </a>
                                                <a href="@Url.Action("Edit", "Workflow", new { id = workflow.WorkflowId })"
                                                   class="btn btn-warning btn-xs btn-action" title="Edit">
                                                    <i class="fa fa-edit"></i>
                                                </a>
                                                <a href="@Url.Action("Clone", "Workflow", new { id = workflow.WorkflowId })"
                                                   class="btn btn-success btn-xs btn-action" title="Clone">
                                                    <i class="fa fa-copy"></i>
                                                </a>
                                                @if (workflow.IsActive)
                                                {
                                                    <button onclick="toggleWorkflowStatus(@workflow.WorkflowId, false)"
                                                            class="btn btn-warning btn-xs btn-action" title="Deactivate">
                                                        <i class="fa fa-pause"></i>
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button onclick="toggleWorkflowStatus(@workflow.WorkflowId, true)"
                                                            class="btn btn-success btn-xs btn-action" title="Activate">
                                                        <i class="fa fa-play"></i>
                                                    </button>
                                                }
                                                <button onclick="deleteWorkflow(@workflow.WorkflowId, '@Html.Raw(Html.Encode(workflow.WorkflowName))')"
                                                        class="btn btn-danger btn-xs btn-action" title="Delete">
                                                    <i class="fa fa-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="empty-state">
                            <i class="fa fa-sitemap"></i>
                            <h4>No workflows found</h4>
                            <p>Start by creating your first workflow.</p>
                            <a href="@Url.Action("Create", "Workflow")" class="btn btn-primary">
                                <i class="fa fa-plus"></i> Create Workflow
                            </a>
                        </div>
                    }
                </div>

                @if (Model != null && Model.Items != null && Model.Items.Any())
                {
                    <!-- Pagination -->
                    <div class="pagination-wrapper">
                        <div class="row">
                            <div class="col-sm-5">
                                <div class="dataTables_info">
                                    Showing @((Model.CurrentPage - 1) * Model.PageSize + 1) to @Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalCount) of @Model.TotalCount entries
                                </div>
                            </div>
                            <div class="col-sm-7">
                                @{
                                    var totalPages = (int)Math.Ceiling((double)Model.TotalCount / Model.PageSize);
                                }
                                @if (totalPages > 1)
                                {
                                    <div class="dataTables_paginate paging_simple_numbers pull-right">
                                        <ul class="pagination">
                                            @if (Model.CurrentPage > 1)
                                            {
                                                <li class="paginate_button previous">
                                                    <a href="@Url.Action("WorkFlowListAsync", new { page = Model.CurrentPage - 1, pageSize = Model.PageSize, searchTerm = ViewBag.SearchTerm })">Previous</a>
                                                </li>
                                            }
                                            else
                                            {
                                                <li class="paginate_button previous disabled">
                                                    <a href="#">Previous</a>
                                                </li>
                                            }

                                            @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(totalPages, Model.CurrentPage + 2); i++)
                                            {
                                                if (i == Model.CurrentPage)
                                                {
                                                    <li class="paginate_button active">
                                                        <a href="#">@i</a>
                                                    </li>
                                                }
                                                else
                                                {
                                                    <li class="paginate_button">
                                                        <a href="@Url.Action("WorkFlowListAsync", new { page = i, pageSize = Model.PageSize, searchTerm = ViewBag.SearchTerm })">@i</a>
                                                    </li>
                                                }
                                            }

                                            @if (Model.CurrentPage < totalPages)
                                            {
                                                <li class="paginate_button next">
                                                    <a href="@Url.Action("WorkFlowListAsync", new { page = Model.CurrentPage + 1, pageSize = Model.PageSize, searchTerm = ViewBag.SearchTerm })">Next</a>
                                                </li>
                                            }
                                            else
                                            {
                                                <li class="paginate_button next disabled">
                                                    <a href="#">Next</a>
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Filter tabs functionality
            $('.filter-tab').click(function () {
                $('.filter-tab').removeClass('active');
                $(this).addClass('active');

                var filter = $(this).data('filter');
                var rows = $('#workflowTable tbody tr');

                if (filter === 'all') {
                    rows.show();
                } else {
                    rows.hide();
                    rows.filter('[data-status="' + filter + '"]').show();
                }
            });

            // Tooltip initialization
            $('[title]').tooltip();

            // Search functionality (client-side)
            $('input[name="searchTerm"]').on('keyup', function () {
                var value = $(this).val().toLowerCase();
                $('#workflowTable tbody tr').filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                });
            });

            // Module filter functionality
            $('select[name="moduleFilter"]').change(function () {
                var selectedModule = $(this).val();
                var rows = $('#workflowTable tbody tr');

                if (selectedModule === '') {
                    rows.show();
                } else {
                    rows.each(function () {
                        var moduleText = $(this).find('.module-badge').text();
                        if (moduleText.indexOf(selectedModule) === -1) {
                            $(this).hide();
                        } else {
                            $(this).show();
                        }
                    });
                }
            });

            // Status filter functionality
            $('select[name="statusFilter"]').change(function () {
                var selectedStatus = $(this).val();
                var rows = $('#workflowTable tbody tr');

                if (selectedStatus === '') {
                    rows.show();
                } else {
                    rows.each(function () {
                        var statusText = $(this).find('.label-status').text().toLowerCase();
                        if (statusText.indexOf(selectedStatus) === -1) {
                            $(this).hide();
                        } else {
                            $(this).show();
                        }
                    });
                }
            });
        });

        // Toggle workflow status with SweetAlert
        function toggleWorkflowStatus(workflowId, activate) {
            var action = activate ? 'activate' : 'deactivate';
            var actionText = activate ? 'Activate' : 'Deactivate';
            var url = activate ? '@Url.Action("ActivateWorkflow", "Workflow")' : '@Url.Action("DeactivateWorkflow", "Workflow")';
            var iconType = activate ? 'question' : 'warning';
            var confirmButtonColor = activate ? '#00a65a' : '#f39c12';

            Swal.fire({
                title: actionText + ' Workflow?',
                text: 'Are you sure you want to ' + action + ' this workflow?',
                icon: iconType,
                showCancelButton: true,
                confirmButtonColor: confirmButtonColor,
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Yes, ' + action + ' it!',
                cancelButtonText: 'Cancel',
                reverseButtons: true,
                customClass: {
                    popup: 'swal2-popup-custom'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    // Show loading
                    Swal.fire({
                        title: actionText.slice(0, -1) + 'ing Workflow...',
                        text: 'Please wait while we process your request.',
                        icon: 'info',
                        allowOutsideClick: false,
                        allowEscapeKey: false,
                        showConfirmButton: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    });

                    $.ajax({
                        url: url,
                        type: 'POST',
                        data: { workflowId: workflowId },
                        success: function (result) {
                            if (result.success) {
                                Swal.fire({
                                    title: 'Success!',
                                    text: 'Workflow has been ' + action + 'd successfully.',
                                    icon: 'success',
                                    confirmButtonColor: '#00a65a',
                                    timer: 2000,
                                    timerProgressBar: true
                                }).then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire({
                                    title: 'Error!',
                                    text: result.message || 'An error occurred while trying to ' + action + ' the workflow.',
                                    icon: 'error',
                                    confirmButtonColor: '#dd4b39'
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            Swal.fire({
                                title: 'Error!',
                                text: 'An error occurred while trying to ' + action + ' the workflow. Please try again.',
                                icon: 'error',
                                confirmButtonColor: '#dd4b39'
                            });
                        }
                    });
                }
            });
        }

        // Delete workflow with SweetAlert
        function deleteWorkflow(workflowId, workflowName) {
            Swal.fire({
                title: 'Delete Workflow?',
                html: `Are you sure you want to delete <strong>"${workflowName}"</strong>?<br><br><small class="text-muted">This action cannot be undone!</small>`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#dd4b39',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'Cancel',
                reverseButtons: true,
                customClass: {
                    popup: 'swal2-popup-custom'
                },
                focusCancel: true
            }).then((result) => {
                if (result.isConfirmed) {
                    // Show loading
                    Swal.fire({
                        title: 'Deleting Workflow...',
                        text: 'Please wait while we process your request.',
                        icon: 'info',
                        allowOutsideClick: false,
                        allowEscapeKey: false,
                        showConfirmButton: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    });

                    $.ajax({
                        url: '@Url.Action("Delete", "Workflow")',
                        type: 'POST',
                        data: { id: workflowId },
                        success: function (result) {
                            if (result.success) {
                                Swal.fire({
                                    title: 'Deleted!',
                                    text: 'Workflow has been deleted successfully.',
                                    icon: 'success',
                                    confirmButtonColor: '#00a65a',
                                    timer: 2000,
                                    timerProgressBar: true
                                }).then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire({
                                    title: 'Error!',
                                    text: result.message || 'An error occurred while trying to delete the workflow.',
                                    icon: 'error',
                                    confirmButtonColor: '#dd4b39'
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            Swal.fire({
                                title: 'Error!',
                                text: 'An error occurred while trying to delete the workflow. Please try again.',
                                icon: 'error',
                                confirmButtonColor: '#dd4b39'
                            });
                        }
                    });
                }
            });
        }

        // Show success message function (can be called from controller)
        function showSuccessMessage(title, message) {
            Swal.fire({
                title: title,
                text: message,
                icon: 'success',
                confirmButtonColor: '#00a65a',
                timer: 3000,
                timerProgressBar: true
            });
        }

        // Show error message function (can be called from controller)
        function showErrorMessage(title, message) {
            Swal.fire({
                title: title,
                text: message,
                icon: 'error',
                confirmButtonColor: '#dd4b39'
            });
        }
    </script>
}